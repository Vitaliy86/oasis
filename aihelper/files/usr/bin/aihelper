#!/usr/bin/env lua

local ai = require("ai_chat_ctrl")

local help = function()
    print("Usage: aihelper <command> [[<options>] arguments]...")

    print("\nOptions:")
    print(" -n <service>           Set the service name")
    print(" -u <url>               Set the url or ipaddr for ai service")
    print(" -k <api-key>           Set the api-key for ai service")
    print(" -m <model>             Set the llm model for ai service")
    print(" -s enable or disable   Set the storage enable/disable")

    print("\nCommands:")
    print(" - storage <path> [<chat-max>] (default: chat-max = 30)")
    print(" - add [<service> [<url> [<api-key> [<model> [<storage>]]]]]")
    print(" - change <service> [<options> <argument>]...")
    print(" - select [<service>]")
    print(" - delete <service>")
    print(" - chat [id=<chat-id>]")
    print(" - prompt <message>")
    print(" - delchat id=<chat-id>")
    print(" - rename <id> <title>")
    print(" - list [[chat] [knowledge]]")
    print(" - test <service>")
    print(" - call <script> <messsage>")

    print("\nDocs")
    print("\thttps://utakamo.com")
end

if #arg == 0 then
    help()
    return 0
end

local options = {}
local arguments = {}

for i, command in ipairs(arg) do
    if command == "storage" then
        if (arg[i + 1]) then
            arguments.path = arg[i + 1]
        end

        if (arg[i + 2]) then
            arguments.chat_max = arg[i + 2]
        end

        ai.storage(arguments)
        return

    elseif command == "add" then

        if (arg[i + 1]) then
            arguments.service = arg[i + 1]
        end

        if (arg[i + 2]) then
            arguments.url = arg[i + 2]
        end

        if (arg[i + 3]) then
            arguments.api_key = arg[i + 3]
        end

        if (arg[i + 4]) then
            arguments.model = arg[i + 4]
        end

        if (arg[i + 5]) then
            arguments.storage = arg[i + 5]
        end

        ai.add(arguments)
        return

    elseif command == "change" then

        if arg[i + 1] then
            arguments.service = arg[i + 1]
        end

        for j, option in ipairs(arg) do

            if (option == "-n") and (arg[j + 1]) then
                options.n = arg[j + 1]
            end

            if (option == "-u") and (arg[j + 1]) then
                options.u = arg[j + 1]
            end

            if (option == "-k") and (arg[j + 1]) then
                options.k = arg[j + 1]
            end

            if (option == "-m") and (arg[j + 1]) then
                options.m = arg[j + 1]
            end

            if (option == "-s") and (arg[j + 1]) then
                options.s = arg[j + 1]
            end
        end

        ai.change(options, arguments)
        return
    elseif command == "select" then
        if arg[i + 1] then
            arguments.service = arg[i + 1]
            ai.select(arguments)
        else
            ai.show_service_list()
        end

        return
    elseif command == "chat" then
        local prefix = "id="
        if (arg[i + 1] and (arg[i + 1]:sub(1,#prefix) == prefix)) then
            arguments.id = arg[i + 1]:sub(#prefix + 1)
        end

        ai.chat(options, arguments)
        return
    elseif command == "delchat" then
        local prefix = "id="
        if (arg[i + 1] and (arg[i + 1]:sub(1,#prefix) == prefix)) then
            arguments.id = arg[i + 1]:sub(#prefix + 1)
            ai.delchat(arguments)
            return
        else
            ai.list()
            return
        end
    elseif command == "prompt" then
        if arg[i + 1] then
            local message = arg[i + 1]
            ai.prompt(message)
        end
        return
    elseif command == "list" then
        ai.list()
        return
    end
end

help()
