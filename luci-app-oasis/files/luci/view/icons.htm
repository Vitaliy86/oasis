<%+header%>

<style>

    /* Unified button styles */
    .add-button, .load-button, .update-button, .delete-button, .cancel-button {
        display: inline-block;
        padding: 0 14px;
        width: 7.5rem;
        height: 2.5rem;
        line-height: 2.5rem;
        color: #ffffff;
        border: none;
        border-radius: 10px;
        cursor: pointer;
        font-weight: 600;
    }
    .add-button, .load-button { background: linear-gradient(180deg, #2a84ff 0%, #0d6efd 100%); }
    .update-button { background: linear-gradient(180deg, #ff5bbd 0%, #ff1493 100%); }
    .delete-button, .cancel-button { background: linear-gradient(180deg, #9aa0a6 0%, #80868b 100%); }
    .load-button:active, .update-button:active, .delete-button:active, .cancel-button:active { transform: translateY(1px); }
    .load-button.done { background: linear-gradient(180deg, #ffd24d 0%, #ffbf00 100%); color: #ffffff; }

    .preview-buttons {
        display: flex;
        justify-content: center;
        gap: 10px;
    }

    #upload-image-container {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        background-color: white;
        border: 1px solid #aaa;
        transform: translate(-50%, -50%);
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        width: 400px;
        text-align: center;
        padding: 20px;
    }
    
    #upload-image-container h3 {
        color: #696969;
    }

    .custom-button:disabled {
        background-color: #4CAF50;
    }

    #oasis-icon-container { display: flex; gap: 10px; flex-wrap: wrap; margin: 8px 0 18px; }
  
    .icon-label {
      cursor: pointer;
      text-align: center;
      margin-right: 15px;
    }
  
    .icon-label img {
      width: 80px;
      height: 80px;
      border-radius: 10px;
      border: 3px solid transparent;
      transition: 0.3s;
      background-color: #FFFFFF;
    }
  
    input[type="radio"]:checked + img {
      border-color: #007bff;
    }
  
    .icon-label input {
      display: none;
    }

    #dropArea {
        display: inline-block;
        width: 80%;
        max-width: 400px;
        padding: 20px;
        margin: 20px auto;
        border: 2px dashed #ccc;
        border-radius: 10px;
        cursor: pointer;
        text-align: center;
    }

    #dropArea.highlight {
        background-color: #e0f7fa;
    }

    .preview {
        margin-top: 20px;
        max-width: 100%;
        height: auto;
    }

    /* Confirm modal */
    .confirm-modal {
        position: fixed;
        inset: 0;
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 1300;
        background: rgba(0, 0, 0, 0.3);
    }
    .confirm-modal.show {
        display: flex !important;
    }
    .confirm-card {
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.15);
        padding: 18px 20px;
        width: min(92vw, 420px);
    }
    .form-actions {
        margin: 10px 0;
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
        justify-content: center;
    }
</style>

<div id="icons-toast" role="status" aria-live="polite" class="toast" aria-atomic="true" style="display:none;"></div>

<h2 style="margin-bottom: 12px;">Select AI Icon</h2>

<div id="oasis-icon-container"></div>

<div style="margin-top: 10px;">
    <button type="button" id="select-button" class="load-button">Select</button>
    <button type="button" id="delete-button" class="delete-button">Delete</button>
</div>

<!-- Delete icon confirm modal -->
<div id="icon-delete-confirm" class="confirm-modal" role="dialog" aria-modal="true" aria-hidden="true">
  <div class="confirm-card">
    <p>Delete this icon?</p>
    <div class="form-actions">
        <button type="button" class="load-button" id="icon-confirm-yes">Yes</button>
        <button type="button" class="delete-button" id="icon-confirm-no">No</button>
    </div>
  </div>
</div>
<h2 style="margin-top: 28px;">Upload AI Icon</h2>

<div id="dropArea">Drag and Drop Image Upload</div>
<input type="file" id="imageInput" accept="image/*" style="display: none;">

<div id="upload-image-container">
    <h3>Upload this image?</h3>
    <div id="oasis-preview-container"></div>
    <div class="preview-buttons">
        <button type="button" id="upload-button" class="update-button">Upload</button>
        <button type="button" id="cancel-button" class="cancel-button">Cancel</button>
    </div>
</div>

<script>

    let is_select = false;
    let using_icon_key = "";
    let _pendingDeleteIconKey = null;

    const select_button = document.getElementById('select-button');
    const toastEl = document.getElementById('icons-toast');

    function showToast(message, type = 'info', timeout = 2000) {
        if (!toastEl) return;
        toastEl.style.display = 'block';
        toastEl.textContent = message;
        toastEl.className = `toast show ${type}`;
        setTimeout(() => { toastEl.className = 'toast'; toastEl.textContent = ''; toastEl.style.display = 'none'; }, timeout);
    }

    function setLoading(btn, loading) {
        if (!btn) return;
        btn.disabled = !!loading;
        if (loading) {
            btn.dataset.prevText = btn.textContent;
            btn.textContent = 'Loading...';
        } else if (btn.dataset.prevText) {
            btn.textContent = btn.dataset.prevText;
            delete btn.dataset.prevText;
        }
    }

    function create_icon_info(key, icon_name, is_using) {
        const resourcePath = '<%= resource %>';
        const iconPath = `${resourcePath}/oasis/`;
        const container = document.getElementById('oasis-icon-container');

        const label = document.createElement('label');
        label.classList.add('icon-label');
        label.id = key;

        const input = document.createElement('input');
        input.type = 'radio';

        if (is_using) {
            input.checked = true;
            using_icon_key = key;
        }

        input.name = 'icon';
        input.value = key;
        input.addEventListener('click', function() {
            if (using_icon_key !== key) {
                is_select = false;
                select_button.classList.remove('done');
                select_button.textContent = 'Select';
            }
        });

        const img = document.createElement('img');
        let decodedIconPath = decodeURIComponent(iconPath + icon_name);
        //img.src = iconPath + icon_name;
        img.src = decodedIconPath;
        img.alt = icon_name;

        label.appendChild(input);
        label.appendChild(img);
        container.appendChild(label);
    }

    select_button.addEventListener('click', function() {

        if (is_select) {
            return;
        }

        const selected_icon = document.querySelector('input[name="icon"]:checked');
        if (!selected_icon) { showToast('Please select an icon', 'error'); return; }

        setLoading(select_button, true);
        fetch('<%=build_url("admin", "network", "oasis", "select-icon")%>', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams({ using: selected_icon.value }),
        })
        .then(response => response.json())
        .then(data => {

            if (data.error) {
                console.error("Error from server:", data.error);
                showToast('Select failed', 'error');
                setLoading(select_button, false);
                return;
            }

            using_icon_key = selected_icon.value;
            select_button.textContent = 'Done';
            select_button.classList.add('done');
            showToast('Selected', 'success');
            setLoading(select_button, false);
        })
        .catch(error => {
            console.error('Error:', error);
            showToast('Network error', 'error');
            setLoading(select_button, false);
        });
    });

    document.getElementById('delete-button').addEventListener('click', function() {

        if (is_select) {
            return;
        }

        const selected_icon = document.querySelector('input[name="icon"]:checked');
        if (!selected_icon) { showToast('Please select an icon', 'error'); return; }
        _pendingDeleteIconKey = selected_icon.value;
        const modal = document.getElementById('icon-delete-confirm');
        modal.classList.add('show');
        modal.setAttribute('aria-hidden', 'false');
        modal.style.display = 'flex';
    });

    document.getElementById('icon-confirm-no').addEventListener('click', function() {
        const modal = document.getElementById('icon-delete-confirm');
        modal.classList.remove('show');
        modal.setAttribute('aria-hidden', 'true');
        modal.style.display = 'none';
        _pendingDeleteIconKey = null;
    });

    document.getElementById('icon-confirm-yes').addEventListener('click', function() {
        if (!_pendingDeleteIconKey) return;
        fetch('<%=build_url("admin", "network", "oasis", "delete-icon-data")%>', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams({ key: _pendingDeleteIconKey }),
        })
        .then(response => response.json())
        .then(data => {
            const modal = document.getElementById('icon-delete-confirm');
            if (data.error) {
                console.error("Error from server:", data.error);
                showToast('Delete failed', 'error');
                modal.classList.remove('show');
                modal.setAttribute('aria-hidden', 'true');
                modal.style.display = 'none';
                _pendingDeleteIconKey = null;
                return;
            }
            const container = document.getElementById('oasis-icon-container');
            const label = document.getElementById(_pendingDeleteIconKey);
            if (container && label) container.removeChild(label);
            showToast('Deleted', 'success');
            modal.classList.remove('show');
            modal.setAttribute('aria-hidden', 'true');
            modal.style.display = 'none';
            _pendingDeleteIconKey = null;
        })
        .catch(error => {
            console.error('Error:', error);
            showToast('Network error', 'error');
            const modal = document.getElementById('icon-delete-confirm');
            modal.classList.remove('show');
            modal.setAttribute('aria-hidden', 'true');
            modal.style.display = 'none';
            _pendingDeleteIconKey = null;
        });
    });

    const dropArea = document.getElementById('dropArea');
    const fileInput = document.getElementById('imageInput');
    let selectedFile = null;

    dropArea.addEventListener('click', () => fileInput.click());

    dropArea.addEventListener('dragover', (event) => {
        event.preventDefault();
        dropArea.classList.add('highlight');
    });

    dropArea.addEventListener('dragleave', () => {
        dropArea.classList.remove('highlight');
    });

    dropArea.addEventListener('drop', (event) => {
        event.preventDefault();
        dropArea.classList.remove('highlight');

        const files = event.dataTransfer.files;
        if (files.length > 0) {
            handleFile(files[0]);
        }
    });

    fileInput.addEventListener('change', (event) => {
        const file = event.target.files[0];
        if (file) {
            handleFile(file);
        }
    });

    function handleFile(file) {

        if (!file.type.startsWith('image/')) {
            showToast('Please select an image file.', 'error');
            return;
        }

        selectedFile = file;
        const reader = new FileReader();
        reader.onload = function(e) {
            const container = document.getElementById('upload-image-container');
            const preview_container = document.getElementById('oasis-preview-container');
            const label = document.createElement('label');
            label.id = "icon-label";
            label.classList.add('icon-label');
            const img = document.createElement('img');
            img.src = e.target.result;
            label.appendChild(img);
            preview_container.appendChild(label);
            container.style.display = 'block';
        };
        reader.readAsDataURL(file);
    }

    document.getElementById('upload-button').addEventListener('click', function() {

        const reader = new FileReader();

        reader.onload = function(event) {

            const base64Data = event.target.result.split(",")[1];

            const uploadBtn = document.getElementById('upload-button');
            setLoading(uploadBtn, true);
            fetch('<%=build_url("admin", "network", "oasis", "upload-icon-data")%>', {
                method: "POST",
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: new URLSearchParams({ filename : selectedFile.name, image : base64Data }),
            })
            .then(response => response.json())
            .then(data => {

                if (data.error) {
                    console.error("Error from server:", data.error);
                    showToast('Upload failed', 'error');
                    setLoading(uploadBtn, false);
                    return;
                }

                /* Upload Success */
                create_icon_info(data.key, selectedFile.name, false);
                showToast('Uploaded', 'success');
                setLoading(uploadBtn, false);
            })
            .catch(error => {
                /* Upload Failure */
                showToast('Upload failed', 'error');
                const uploadBtn = document.getElementById('upload-button');
                setLoading(uploadBtn, false);
            });
        };

        reader.readAsDataURL(selectedFile);
        const container = document.getElementById('upload-image-container');
        const preview_container = document.getElementById('oasis-preview-container');
        const image_label = document.getElementById('icon-label');
        preview_container.removeChild(image_label);
        container.style.display = 'none';
    });

    document.getElementById('cancel-button').addEventListener('click', function() {
        const container = document.getElementById('upload-image-container');
        const preview_container = document.getElementById('oasis-preview-container');
        const image_label = document.getElementById('icon-label');
        preview_container.removeChild(image_label);
        container.style.display = 'none';
    });

    document.addEventListener('DOMContentLoaded', function () {
        fetch('<%=build_url("admin", "network", "oasis", "load-icon-info")%>', {
            method: 'POST',
        })
        .then(response => response.json())
        .then(data => {

            if (data.error) {
                console.error("Error from server:", data.error);
                return;
            }

            Object.entries(data.list).forEach(([key, value]) => {
                let is_using = (data.ctrl.using == key) ? true : false;
                create_icon_info(key, value, is_using);
            });
        })
        .catch(error => {
            console.error('Error:', error);
        });
    });

</script>

<%+footer%>