#!/usr/bin/env lua
local jsonc = require("luci.jsonc")
local uci = require("luci.model.uci").cursor()
local oasis = require("ai_chat_ctrl")

local request_method = os.getenv("REQUEST_METHOD")

local extract_code_blocks = function(text)
    local code_blocks = {}
    local pattern = "```(.-)```"

    for code in text:gmatch(pattern) do
        table.insert(code_blocks, code)
    end

    return code_blocks
end

local split_lines = function(code_block)
    local lines = {}
    for line in code_block:gmatch("[^\r\n]+") do
        table.insert(lines, line)
    end

    return lines
end

local extract_uci_cmds = function(lines)

    local valid_cmds = {
        set = {},
        add = {},
        add_list = {},
        commit = {},
        delete = {},
        reorder = {},
    }

    local cmd_pattern = {
        set = "^uci set .+",
        add = "^uci add .+",
        add_list = "^uci add_list .+",
        commit = "^uci commit",
        delete = "^uci delete .+",
        reorder = "^uci reorder .+",
    }

    for _, line in ipairs(lines) do
        for cmd, pattern in pairs(cmd_pattern) do
            if line:match(pattern) then
                valid_cmds[cmd][#valid_cmds] = line
                -- parse_uci_params(valid_cmds[cmd][#valid_cmds])
                print(valid_cmds[cmd][#valid_cmds]) -- test
            end
        end
    end

    return valid_cmds
end

print("Content-Type: text/plain\n")

-- os.execute("echo \"oasis cgi called\" >> /tmp/oasis.log")

if request_method == "POST" then
    -- os.execute("echo POST >> /tmp/oasis.log")
    local content_length = tonumber(os.getenv("CONTENT_LENGTH") or 0)
    local post_data = io.read(content_length)
    -- os.execute("echo " .. content_length .. " >> /tmp/oasis.log")
    -- os.execute("echo " .. post_data.message .. " >> /tmp/oasis.log")

    local json_tbl = jsonc.parse(post_data)

    -- for k, v in pairs(json_tbl) do
    --     os.execute("key:" .. k .. ", value = " .. v .. " >> /tmp/oasis.log")
    -- end

    if not json_tbl then
        io.write("Message Format Error.")
        return
    end

    oasis.output(json_tbl)
else
    io.write("This script only handles POST requests.")
end
