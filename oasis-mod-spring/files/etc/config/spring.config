config ctrl ctrl
        option ai '1'

config debug debug
        option enable '0'

# The UCI configuration of this software is complex, making manual setup impractical. 
# It is recommended to modify settings through the LuCI UI.
# ########################################
# #1. [master]                           #
# ########################################
config master master
        option script_path '/etc/spring/scripts'
        list target_phase 'phase_a'
        list target_phase 'phase_b'

# ########################################
# #2. [master-event-func type section]   #
# ########################################
# IMPORTANT: 
# Sections of this type must not be edited.
# They are used by the core functionality of Spring.
#
# This is a list of event detection functions built into Spring.
# Based on this list, function calls can be assigned to each phase of the automaton system.
# The invocation patterns for event detection functions in each phase are managed within anonymous sections of the phase_{a ... z} type.
# 
# - Format
# config master-event-func
#       option type 'luacode' or 'ccode 'or 'luascript'
#       option name 'function_a'
#       option is_args '0' or '1'
#       option rtype 'scalar' or 'table'
#       option desc 'This section provides a description of the function's capabilities.'
#       option tips 'Please provide usage instructions for this function here.'
# 
# Note:
# The maximum string size that can be set as a UCI option value is about 128 ~ 144 bytes. The description recorded in the desc option should be kept concise.
#

config master-event-func
        option type 'luacode'
        option name 'get_wired_if_list'
        option is_args '0'
        option rtype 'table'
        option desc 'Retrieves a list of wired LAN interface names recognized by the system.'
        option tips 'Specify the interface name(s) to be detected using the judge option in each phase section.'

config master-event-func
        option type 'luacode'
        option name 'get_wireless_if_list'
        option is_args '0'
        option rtype 'table'
        option desc 'Retrieves a list of wireless LAN interface names recognized by the system.'
        option tips 'Specify the interface name(s) to be detected using the judge option in each phase section.'

config master-event-func
        option type 'luacode'
        option name 'phase_switch_timer'
        option is_args '0'
        option rtype 'scalar'
        option desc 'Measures the elapsed time (in seconds) since transitioning to the current phase.'
        option tips 'Specify the maximum duration for the target phase using the judge option in each phase section.'

config master-event-func
        option type 'luacode'
        option name 'get_kernel_version'
        option is_args '0'
        option rtype 'scalar'

config master-event-func
        option type 'luacode'
        option name 'get_used_memory'
        option is_args '0'
        option rtype 'scalar'
        option desc 'Retrieves the amount of memory currently in use.'

config master-event-func
        option type 'ccode'
        option name 'get_ifname_from_idx'
        option is_args '1'
        option rtype 'table'
        option desc 'Retrieves the interface name corresponding to the specified index.'
        option tips 'Specify the interface index as an argument to this function. The function returns a table containing the interface name(s) corresponding to the index.'

config master-event-func
        option type 'ccode'
        option name 'get_if_ipv4'
        option is_args '1'
        option rtype 'scalar'
        option desc 'Retrieves the IPv4 address corresponding to the specified interface index.'
        option tips 'Specify the interface index as an argument to this function. The function returns the IPv4 address corresponding to the index.'

config master-event-func
        option type 'ccode'
        option name 'get_netmask'
        option is_args '1'
        option rtype 'scalar'
        option desc 'Retrieves the netmask corresponding to the specified interface index.'
 
 config master-event-func
        option type 'ccode'
        option name 'get_interface_mtu'
        option is_args '1'
        option rtype 'scalar'
        option desc 'Retrieves the MTU (Maximum Transmission Unit) corresponding to the specified interface index.'
        option tips 'Specify the interface index as an argument to this function. The function returns the MTU corresponding to the index.'

config master-event-func
        option type 'ccode'
        option name 'get_interface_mac'
        option is_args '1'
        option rtype 'scalar'
        option desc 'Retrieves the MAC address corresponding to the specified interface index.'
        option tips 'Specify the interface index as an argument to this function. The function returns the MAC address corresponding to the index.'

config master-event-func
        option type 'ccode'
        option name 'get_interface_flags'
        option is_args '1'
        option rtype 'scalar'
        option desc 'Retrieves the flags corresponding to the specified interface index.'
        option tips 'Specify the interface index as an argument to this function. The function returns the flags corresponding to the index.'

# ########################################
# #3. [master-event-func type section]   #
# ########################################
# IMPORTANT: 
# Sections of this type must not be edited.
# They are used by the core functionality of Spring.
#
# This is a list of event detection functions built into Spring.
# Based on this list, function calls can be assigned to each phase of the automaton system.
# The invocation patterns for event detection functions in each phase are managed within anonymous sections of the phase_{a ... z} type.
# 
# - Format
# config master-event-func
#       option type 'luacode' or 'ccode 'or 'luascript'
#       option name 'function_a'
#       option is_args '0' or '1'
#       option rtype 'scalar' or 'table'
#       option desc 'This section provides a description of the function's capabilities.'
#       option tips 'Please provide usage instructions for this function here.'
# 
# Note:
# The maximum string size that can be set as a UCI option value is about 128 ~ 144 bytes. The description recorded in the desc option should be kept concise.
#

config master-action-func
        option type 'luacode'
        option name 'test_a_ction'
        option is_args '0'
        option desc 'This func is test.'
        option tips 'tips is here'

config master-action-func
        option type 'luacode'
        option name 'test_b_ction'
        option is_args '1'
        option desc 'This func is test.'
        option tips 'tips is here'

config master-action-func
        option type 'ccode'
        option name 'add_route'
        option is_args '1'

config master-action-func
        option type 'ccode'
        option name 'delete_route'
        option is_args '1'

config master-action-func
        option type 'luacode'
        option name 'test_b_ction'
        option is_args '1'

config master-action-func
        option type 'luacode'
        option name 'test_b_ction'
        option is_args '1'

config master-action-func
        option type 'luacode'
        option name 'test_b_ction'
        option is_args '1'

config master-action-func
        option type 'luacode'
        option name 'test_b_ction'
        option is_args '1'

config master-action-func
        option type 'luacode'
        option name 'test_b_ction'
        option is_args '1'

config master-action-func
        option type 'luacode'
        option name 'test_b_ction'
        option is_args '1'

config master-action-func
        option type 'luacode'
        option name 'test_b_ction'
        option is_args '1'

# ##############################
# #4. [PHASE A EVENT (SAMPLE)] #
# ##############################

config phase_a_event
        option type 'luacode'
        option name 'get_wired_if_list'
        list judge '5.4.1'
        option next_phase 'phase_b'

config phase_a_event
        option type 'luacode'
        option name 'get_ip_address'
        list args 'eth0'
        list judge 'lan'
        option next_phase 'phase_b'

config phase_a_event
        option type 'luacode'
        option name 'get_kernel_version'
        list judge '6.3.2'
        option next_phase 'phase_b'

config phase_a_event
        option type 'ccode'
        option name 'get_if_ipv4'
        list args 'eth0'
        list judge '192.168.100.1'
        option next_phase 'phase_b'

# ###############################
# #5. [PHASE A ACTION (SAMPLE)] #
# ###############################

config phase_a_action
        option type 'luacode'
        option name 'test_a_action'

config phase_a_action
        option type 'luacode'
        option name 'test_b_action'
        list args 'Hello! called by get_wired_if_list'

config phase_a_action
        option type 'luacode'
        option name 'test_b_action'
        list args 'Hello Everyone!'
        list args 'called by get_wireless_if_list'

config phase_a_action
        option type 'luacode'
        option name 'test_b_action'
        list args 'Hello Everyone!'
        list args 'called by get_if_ipv4'

# ############################
# #6. PHASE B EVENT (SAMPLE) #
# ############################

config phase_b_event
        option type 'luacode'
        option name 'get_wired_if_list'
        option next_phase 'phase_a'

# #############################
# #6. PHASE B ACTION (SAMPLE) #
# #############################
config phase_b_action
        option type 'luacode'
        option name 'test_a_action'