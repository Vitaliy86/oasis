#!/usr/bin/env lua
local jsonc = require("luci.jsonc")
local uci = require("luci.model.uci").cursor()
local common = require("oasis.common")
local oasis = require("oasis.chat.main")
local filter = require("oasis.chat.filter")
-- local debug = require("oasis.chat.debug")

local request_method = os.getenv("REQUEST_METHOD")

print("Content-Type: text/plain\n")

-- debug:log("oasis.log",  "\n--- [cgi] ---")

if request_method == "POST" then
    local content_length = tonumber(os.getenv("CONTENT_LENGTH") or 0)
    local post_data = io.read(content_length)
    -- debug:log("oasis.log", "content length = " .. content_length)
    -- debug:log("oasis.log", "message = " .. post_data)

    local json_tbl = jsonc.parse(post_data)

    -- debug:dump("oasis.log", json_tbl)

    if not json_tbl then
        io.write("Message Format Error.")
        return
    end

    -- Branch: tool result handling (from WebUI fetch)
    -- Expecting payload like:
    -- {"tool_outputs":[{"tool_call_id":"...","output":"..."}], "service":"OpenAI", "name":"get_wlan_if_list", "thread_id":"...", "run_id":"..."}
    if (json_tbl.tool_outputs ~= nil) and (type(json_tbl.tool_outputs) == "table") then
        return
    end

    local enable = uci:get_bool(common.db.uci.cfg, common.db.uci.sect.assist, "enable")
    local new_chat_info, plain_text_ai_message = oasis.output(json_tbl)
    local uci_cmd_notification = {}
    if enable and plain_text_ai_message then
        uci_cmd_notification.uci_list = filter.uci_cmd_filter(plain_text_ai_message)
        uci_cmd_notification.uci_notify = filter.check_uci_list_exist(uci_cmd_notification.uci_list)
        if uci_cmd_notification.uci_notify then
            uci_cmd_notification = jsonc.stringify(uci_cmd_notification, false)
            -- os.execute("echo \"" .. uci_cmd_notification .. "\" >> /tmp/oasis-notify.log")
            io.write(uci_cmd_notification)
            io.flush()
            os.execute("sleep 1")
        -- else
            -- debug:log("oasis.log", "no uci list")
        end
    end

    if #new_chat_info > 0 then
        -- debug:log("oasis.log", "new_chat_info = " .. new_chat_info)
        io.write(new_chat_info)
    end
else
    io.write("This script only handles POST requests.")
end