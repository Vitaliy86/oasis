#!/usr/bin/env lua

local sys       = require("luci.sys")
local uci       = require("luci.model.uci").cursor()
local oasis     = require("oasis.chat.apply")
local common    = require("oasis.common")
local misc      = require("oasis.chat.misc")

local is_backup = uci:get_bool(common.db.uci.cfg, common.db.uci.sect.backup, "enable")
local limit_time = uci:get(common.db.uci.cfg, common.db.uci.sect.backup, "rollback_time") or "300"

if not is_backup then
    return 1
end

if (not limit_time) or (#limit_time == 0) then
    return 1
end

limit_time = tonumber(limit_time)

local initial_uptime = uci:get(common.db.uci.cfg, common.db.uci.sect.backup, "uptime")

if arg[1] and (arg[1] == "boot") then
    initial_uptime = misc.get_uptime()
end

while true do
    local final_uptime = misc.get_uptime()

    if misc.check_file_exist(common.flag.apply.complete) then
        uci:set(common.db.uci.cfg, common.db.uci.sect.backup, "enable", "0")
        uci:commit(common.db.uci.cfg)
        return 0
    elseif misc.check_file_exist(common.flag.apply.rollback) then
        oasis.recovery()
        return 0
    end

    local elapsed_seconds = tonumber(final_uptime) - tonumber(initial_uptime)

    if elapsed_seconds > limit_time then
        oasis.recovery()
        return 0
    end

    sys.exec("sleep 3")

end
