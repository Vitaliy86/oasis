#!/usr/bin/env lua

local oasis = require("oasis.chat.main")

local options_spec = {
    ["-n"] = "n",
    ["-u"] = "u",
    ["-k"] = "k",
    ["-m"] = "m",
    ["-s"] = "s"
}

local function help()
    print([=[
Usage: oasis <command> [[<options>] arguments]...

Options:
 -u <Endpoint>          Set the  AI Service Endpoint(URL)
 -k <api-key>           Set the API key
 -m <model>             Set the LLM model
 -s <storage>           Set the storage path

Commands:
 storage <path> [<chat-max>]
 add [<service> [<endpoint> [<api-key> [<model> [<storage>]]]]]
 change <service-id> [<options> <value>]...
 select [<service-id>]
 delete <service-id>
 chat [id=<chat-id>]
 prompt <message>
 sysrole [[<chat|prompt|call> [<options>] [<system message>]]
 delchat id=<chat-id>
 rename id=<chat-id> <title>
 list
 call <script> <message>

Docs:
 https://utakamo.com
    ]=])
end

local function parse_options(args, start_index)
    local options = {}
    local i = start_index
    while i <= #args do
        local opt_key = args[i]
        local opt_val = args[i + 1]
        local opt_name = options_spec[opt_key]
        if opt_name and opt_val then
            options[opt_name] = opt_val
            i = i + 2
        else
            i = i + 1
        end
    end
    return options
end

local function extract_id(arg_str)
    local prefix = "id="
    if arg_str and arg_str:sub(1, #prefix) == prefix then
        return arg_str:sub(#prefix + 1)
    end
    return nil
end

local commands = {}

commands.storage = function(args)
    oasis.storage({ path = args[2], chat_max = args[3] })
end

commands.add = function(args)
    oasis.add({
        service  = args[2],
        endpoint = args[3],
        api_key  = args[4],
        model    = args[5],
        storage  = args[6]
    })
end

commands.change = function(args)
    local identifier = args[2]
    if not identifier then return help() end
    local options = parse_options(args, 3)
    oasis.change(options, { identifier = identifier })
end

commands.select = function(args)
    if args[2] then
        oasis.select({ identifier = args[2] })
    else
        oasis.show_service_list()
    end
end

commands.delete = function(args)
    if args[2] then
        oasis.delete({ identifier = args[2] })
    else
        oasis.show_service_list()
    end
end

commands.chat = function(args)
    local id = extract_id(args[2])
    oasis.chat({ id = id })
end

commands.delchat = function(args)
    local id = extract_id(args[2])
    if id then
        oasis.delchat({ id = id })
    else
        oasis.list()
    end
end

commands.prompt = function(args)
    if args[2] then
        oasis.prompt({ message = args[2] })
    end
end

commands.rename = function(args)
    local id = extract_id(args[2])
    if id and args[3] then
        oasis.rename({ id = id, title = args[3] })
    else
        oasis.list()
    end
end

commands.list = function()
    oasis.list()
end

commands.call = function(args)
    if args[2] and args[3] then
        oasis.cmd_call({ cmd = args[2], message = args[3] })
    end
end

local main_cmd = arg[1]
if not main_cmd or not commands[main_cmd] then
    help()
else
    commands[main_cmd](arg)
end
