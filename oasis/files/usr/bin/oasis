#!/usr/bin/env lua

local ai = require("oasis.chat.main")

local cmd = {}
cmd.storage = "storage"
cmd.add     = "add"
cmd.delete  = "delete"
cmd.select  = "select"
cmd.chat    = "chat"
cmd.delchat = "delchat"
cmd.prompt  = "prompt"
cmd.rename  = "rename"
cmd.list    = "list"
cmd.call    = "call"

local opt = {}
opt.n = "-n"
opt.u = "-u"
opt.k = "-k"
opt.m = "-m"
opt.s = "-s"

local chat_data_prefix = "id="

local help = function()
    print("Usage: oasis <command> [[<options>] arguments]...")

    print("\nOptions:")
    print(" -n <service>           Set the service name")
    print(" -u <url>               Set the url or ipaddr for ai service")
    print(" -k <api-key>           Set the api-key for ai service")
    print(" -m <model>             Set the llm model for ai service")

    print("\nCommands:")
    print(" - storage <path> [<chat-max>] (default: chat-max = 30)")
    print(" - add [<service> [<url> [<api-key> [<model> [<storage>]]]]]")
    print(" - change <service> [<options> <argument>]...")
    print(" - select [<service>]")
    print(" - delete <service>")
    print(" - chat [id=<chat-id>]")
    print(" - prompt <message>")
    print(" - sysrole [[<chat|prompt|call> [<options>] [<system message>]]")
    print(" - delchat id=<chat-id>")
    print(" - rename id=<chat-id> <title>")
    print(" - list")
    print(" - call <script> <messsage>")

    print("\nDocs")
    print("\thttps://utakamo.com")
end

if #arg == 0 then
    help()
    return 0
end

local options = {}
local arguments = {}

for i, command in ipairs(arg) do
    if command == cmd.storage then
        if (arg[i + 1]) then
            arguments.path = arg[i + 1]
        end

        if (arg[i + 2]) then
            arguments.chat_max = arg[i + 2]
        end

        ai.storage(arguments)
        return

    elseif command == cmd.add then

        if (arg[i + 1]) then
            arguments.service = arg[i + 1]
        end

        if (arg[i + 2]) then
            arguments.url = arg[i + 2]
        end

        if (arg[i + 3]) then
            arguments.api_key = arg[i + 3]
        end

        if (arg[i + 4]) then
            arguments.model = arg[i + 4]
        end

        if (arg[i + 5]) then
            arguments.storage = arg[i + 5]
        end

        ai.add(arguments)
        return

    elseif command == cmd.change then

        if arg[i + 1] then
            arguments.service = arg[i + 1]
        end

        for j, option in ipairs(arg) do

            if (option == opt.n) and (arg[j + 1]) then
                options.n = arg[j + 1]
            end

            if (option == opt.u) and (arg[j + 1]) then
                options.u = arg[j + 1]
            end

            if (option == opt.k) and (arg[j + 1]) then
                options.k = arg[j + 1]
            end

            if (option == opt.m) and (arg[j + 1]) then
                options.m = arg[j + 1]
            end

            if (option == opt.s) and (arg[j + 1]) then
                options.s = arg[j + 1]
            end
        end

        ai.change(options, arguments)
        return
    elseif command == cmd.delete then
        if arg[i + 1] then
            arguments.service = arg[i + 1]
            ai.delete(arguments)
            return
        else
            ai.show_service_list()
        end
    elseif command == cmd.select then
        if arg[i + 1] then
            arguments.service = arg[i + 1]
            ai.select(arguments)
        else
            ai.show_service_list()
        end

        return
    elseif command == cmd.chat then
        if (arg[i + 1] and (arg[i + 1]:sub(1,#chat_data_prefix) == chat_data_prefix)) then
            arguments.id = arg[i + 1]:sub(#chat_data_prefix + 1)
        end

        ai.chat(arguments)
        return
    elseif command == cmd.delchat then
        if (arg[i + 1] and (arg[i + 1]:sub(1,#chat_data_prefix) == chat_data_prefix)) then
            arguments.id = arg[i + 1]:sub(#chat_data_prefix + 1)
            ai.delchat(arguments)
            return
        else
            ai.list()
            return
        end
    elseif command == cmd.prompt then
        if arg[i + 1] then
            arguments.message = arg[i + 1]
            ai.prompt(arguments)
        end
        return
    elseif command == cmd.rename then
        if (arg[i + 1] and (arg[i + 1]:sub(1,#chat_data_prefix) == chat_data_prefix) and arg[i + 2]) then
            arguments.id = arg[i + 1]:sub(#chat_data_prefix + 1)
            arguments.title = arg[i + 2]
            ai.rename(arguments)
            return
        else
            ai.list()
            return
        end
    elseif command == cmd.list then
        ai.list()
        return
    elseif command == cmd.call then
        if arg[i + 1] and arg[i + 2] then
            arguments.cmd = arg[i + 1]
            arguments.message = arg[i + 1]
            ai.cmd_call(arguments)
            return
        end
    end
end

help()
